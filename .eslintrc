{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 13,
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint"
  ],
  "rules": {
    /* ================ linting ================ */
    // disables the no-unused-vars rule
    "no-unused-vars": [
      "off"
    ],
    // forces the use of const or let instead of var
    "no-var": [
      "error"
    ],
    // no unreadable exports/imports
    "object-curly-newline": [
      "error",
      {
        "ObjectExpression": "always",
        "ObjectPattern": {
          "multiline": true
        },
        "ImportDeclaration": {
          "multiline": true,
          "minProperties": 3
        },
        "ExportDeclaration": {
          "multiline": true,
          "minProperties": 3
        }
      }
    ],
    /* ================ formatting ================ */
    // use 2 spaces for indentation
    "indent": [
      "error",
      2
    ],
    // use double quotes
    "quotes": [
      "error",
      "double"
    ],
    // dont move comma to new line
    "comma-dangle": [
      "error",
      "never"
    ],
    // use unix linebreaks
    "linebreak-style": [
      "error",
      "unix"
    ],
    // add a space before and after brackets
    "array-bracket-spacing": [
      "error",
      "always"
    ],
    // adds a space before and after curly braces
    "object-curly-spacing": [
      "error",
      "always"
    ],
    // moves the dot before a function call to the next line
    "newline-per-chained-call": [
      "error",
      {
        "ignoreChainWithDepth": 2
      }
    ],
    // ensures that functions are defined before they are used
    "func-style": [
      "error",
      "declaration",
      {
        "allowArrowFunctions": true
      }
    ],
    // new line for ternary operator
    "multiline-ternary": [
      "error",
      "always-multiline"
    ],
    // new line for operators
    "operator-linebreak": [
      "error",
      "none",
      {
        "overrides": {
          "?": "before",
          ":": "before",
          "||": "after",
          "&&": "after"
        }
      }
    ],
    // new line for function arguments
    "function-call-argument-newline": [
      "error",
      "consistent"
    ]
  },
  // rules for typescript files only
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "rules": {
        // force type imports to be used
        "@typescript-eslint/consistent-type-imports": [
          "error",
          {
            "prefer": "type-imports"
          }
        ]
      }
    }
  ]
}